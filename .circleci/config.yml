version: 2.1

orbs:
  python: circleci/python@2.1.1

docker-auth: &docker-auth
  auth:
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD

heroku-auth: &heroku-auth
  auth:
    url: registry.heroku.com
    username: $HEROKU_EMAIL
    email: $HEROKU_EMAIL
    password: $HEROKU_PASSWORD

jobs:
  test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: python -m pytest oc_lettings

  lint:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt
      - run:
          name: Run flake8
          command: cd oc_lettings && python -m flake8 oc_lettings

  build:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
        - checkout
        - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
        - run: docker build -t xevan/oc-lettings-repo:$CIRCLE_SHA1 .
        - run: docker push xevan/oc-lettings-repo:$CIRCLE_SHA1

  compose_and_test:
    machine:
      image: ubuntu-2204:2022.04.2
    environment:
      BASH_ENV: /etc/profile
      DEBUG: 1
      PORT: 7000
      SENTRY_DNS: https://19dc4cfc565f4f36bad78168c9e7a646@o4503968575586304.ingest.sentry.io/4503968578404352
      SECRET_KEY: "fp9^593hsriajg_5trot9g!1qa@ewo-1#@4hp46s"
      DATABASE_URL: "postgres://app:password@db:5432/oc-lettings"
      POSTGRES_USER: app
      POSTGRES_DB: oc-lettings
      POSTGRES_PASSWORD: password
    steps:
        - checkout
        - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
        - run: docker pull xevan/oc-lettings-repo:$CIRCLE_SHA1
        - run: sudo sh -c "echo 'export SENTRY_DNS=${SENTRY_DNS}' >> $BASH_ENV"
        - run: sudo sh -c "echo 'export SECRET_KEY=${SECRET_KEY}' >> $BASH_ENV"
        - run: docker compose -f docker-compose-prod.yaml up -d
        #- run: docker compose -f docker-compose-prod.yaml exec app python manage.py init

  heroku_deploy:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: docker pull xevan/oc-lettings-repo:$CIRCLE_SHA1
      - run: docker tag xevan/oc-lettings-repo:$CIRCLE_SHA1 registry.heroku.com/oc-lettings-oc/web
      # install CLI
      - run: sudo curl https://cli-assets.heroku.com/install.sh | sh
      - run: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
      - run: HEROKU_API_KEY=${HEROKU_TOKEN} docker push registry.heroku.com/oc-lettings-oc/web
      - run: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push --app=oc-lettings-oc release
      - run: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release init --app=oc-lettings-oc web release


# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  base:
    jobs:
      - test
      - lint
      - build:
          requires:
            - test
            - lint
          filters:
            branches:
              only:
                - master
      - compose_and_test:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - heroku_deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - compose_and_test
