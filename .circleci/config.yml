version: 2.1

orbs:
  python: circleci/python@2.1.1

docker-auth: &docker-auth
  auth:
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD

heroku-auth: &heroku-auth
  auth:
    url: registry.heroku.com
    username: $HEROKU_EMAIL
    email: $HEROKU_EMAIL
    password: $HEROKU_PASSWORD

jobs:
  test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: python -m pytest oc-lettings

  lint:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt
      - run:
          name: Run flake8
          command: python -m flake8 oc-lettings

  compose_and_test:
    docker:
      - image: xevan/oc-lettings-repo:$CIRCLE_SHA1
        <<: *docker-auth
        environment:
          DEBUG: 1
          SENTRY_DNS: $SENTRY_DNS
          DATABASE_URL: "postgres://app:somemdp@localhost:5432/circle_test?sslmode=disable"
          USE_DOCKER: no
      - image: cimg/postgres:14.1
        environment:
          POSTGRES_USER: app
          POSTGRES_DB: circle_test
          POSTGREST_PASSWORD: somemdp
          PORT: 5000
        <<: *docker-auth
    steps:
      - checkout
      - run:
          name: Init Bd
          command: python oc-lettings/manage.py init
      - run:
          name: Test
          command: python -m pytest oc-lettings
      - run: ls
      - run:
          name: Start Serveur
          command: cd oc-lettings && gunicorn oc-lettings.wsgi:application --bind=$PORT

  build:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
        - checkout
        - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
        - run: docker build -t xevan/oc-lettings-repo:$CIRCLE_SHA1 .
        - run: docker push xevan/oc-lettings-repo:$CIRCLE_SHA1

  x_and_test:
    machine:
      image: ubuntu-2204:2022.04.2
    environment:
      DEBUG: 1
      SENTRY_DNS: $SENTRY_DNS
      DATABASE_URL: "postgres://marcel:password@db:5432/circleci_test"
      POSTGRES_USER: marcel
      POSTGRES_DB: circleci_test
      POSTGRES_PASSWORD: password
    steps:
        - checkout
        - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
        - run: docker pull xevan/oc-lettings-repo:$CIRCLE_SHA1
        - run: docker compose run -e SENTRY_DNS=$SENTRY_DNS -e DATABASE_URL="postgres://marcel:password@db:5432/circleci_test" app python --help
        - run: docker compose up

  heroku_deploy:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker pull xevan/oc-lettings-repo:$CIRCLE_SHA1
          docker tag xevan/oc-lettings-repo:$CIRCLE_SHA1 release
          heroku push release
          heroku container:release web release


# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  base:
    jobs:
      - test
      - lint:
          filters:
            branches:
              only:
                - master
                - dev
      - build:
          requires:
            - test
            - lint
          filters:
            branches:
              only:
                - master
      - compose_and_test:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - heroku_deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - compose_and_test
  test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - circleci-project-setup
      - compose_and_test:
          requires:
            - build
          filters:
            branches:
              only:
                - circleci-project-setup

